---
apiVersion: apps/v1
kind: Deployment
metadata:
 name: inventory-ms
spec:
 selector:
   matchLabels:
     app: inventory-ms
 replicas: 2
 template:
   metadata:
     labels:
       app: inventory-ms
   spec:
     containers:
       - name: inventory-ms
         image: bits/inventory-ms:latest
         imagePullPolicy: Never
         ports:
           - containerPort: 8081


---


apiVersion: v1
kind: Service
metadata:
 name: inventory-svc
spec:
 selector:
   app: inventory-ms
 ports:
   - protocol: "TCP"
     port: 8081
     targetPort: 8081
 type: NodePort


---

apiVersion: apps/v1
kind: Deployment
metadata:
 name: order-ms
spec:
 selector:
   matchLabels:
     app: order-ms
 replicas: 2
 template:
   metadata:
     labels:
       app: order-ms
   spec:
     containers:
       - name: order-ms
         image: bits/order-ms:latest
         imagePullPolicy: Never
         ports:
           - containerPort: 8080
         env:
           - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
             value: "kafka-bootstrap-service:9092"  # Kafka bootstrap server address


---


apiVersion: v1
kind: Service
metadata:
 name: order-svc
spec:
 selector:
   app: order-ms
 ports:
   - protocol: "TCP"
     port: 8080
     targetPort: 8080
 type: NodePort


---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: shipping-ms
spec:
  selector:
    matchLabels:
      app: shipping-ms
  replicas: 2
  template:
    metadata:
      labels:
        app: shipping-ms
    spec:
      containers:
        - name: shipping-ms
          image: bits/order-ms:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 8082
          env:
            - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
              value: "kafka-bootstrap-service:9092"  # Kafka bootstrap server address


---


apiVersion: v1
kind: Service
metadata:
  name: shipping-svc
spec:
  selector:
    app: order-ms
  ports:
    - protocol: "TCP"
      port: 8082
      targetPort: 8080
  type: NodePort

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-bootstrap-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-bootstrap
  template:
    metadata:
      labels:
        app: kafka-bootstrap
    spec:
      containers:
        - name: kafka-bootstrap-container
          image: wurstmeister/kafka:latest  # Adjust the Kafka image as needed
          ports:
            - containerPort: 9092  # Kafka bootstrap server port
          env:
            - name: KAFKA_ADVERTISED_LISTENERS
              value: INSIDE://kafka-bootstrap-service:9092,OUTSIDE://your-k8s-external-ip:9092  # Adjust the external IP
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT  # Adjust security protocols
            - name: KAFKA_LISTENERS
              value: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9092  # Adjust listener addresses
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: INSIDE  # Adjust the internal listener name
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: your-zookeeper-service:2181  # Adjust Zookeeper service address

---
apiVersion: v1
kind: Service
metadata:
  name: kafka-bootstrap-service
spec:
  ports:
    - port: 9092
  selector:
    app: kafka-bootstrap

---
apiVersion: v1
kind: Service
metadata:
  name: your-zookeeper-service
spec:
  ports:
    - port: 2181
  selector:
    app: your-zookeeper
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: your-zookeeper-config
data:
  zookeeper.properties: |-
    # Your Zookeeper properties here
    # For example:
    dataDir=/data
    clientPort=2181
    maxClientCnxns=0
